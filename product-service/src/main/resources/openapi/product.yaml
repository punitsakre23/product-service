openapi: 3.0.1
info:
  title: Product Service
  description: Product Service
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /v1.0/products:
    get:
      tags:
        - Product Controller
      summary: Get all products
      operationId: getAllProducts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllProducts'
    post:
      tags:
        - Product Controller
      summary: Add a product
      operationId: addProduct
      requestBody:
        description: JSON object of a product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'


components:
  schemas:
    GetAllProducts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        timestamp:
          type: string
          format: date-time
          example: "2024-09-08T14:32:45.123"

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        productId:
          type: string
          example: "STD"
        effectiveFrom:
          type: string
          format: date
          example: "2024-09-08"
        effectiveTo:
          type: string
          format: date
          example: "2024-09-08"
        bookingChannel:
          type: string
          example: "IPHONE"
        productGroupId:
          type: integer
          example: 2
        isPlatformFeeApplicable:
          type: string
          example: "YES"
        remarks:
          type: string
          example: "remarks"
        platformFeeThresholdLimit:
          type: number
          format: double
          example: 1.1
        lowerPlatformFee:
          type: number
          format: double
          example: 2.3
        higherPlatformFee:
          type: number
          format: double
          example: 5
        available:
          type: boolean
          example: true
        createdBy:
          type: string
          example: "SYSTEM"
        createdDate:
          type: string
          format: date-time
          example: "2024-09-08T14:32:45.123"
        updatedBy:
          type: string
          example: "SYSTEM"
        updatedDate:
          type: string
          format: date-time
          example: "2024-09-08T14:32:45.123"

    CreateProduct:
      type: object
      properties:
        productId:
          type: string
          example: "STD"
        effectiveFrom:
          type: string
          format: date
          example: "2024-09-08"
        effectiveTo:
          type: string
          format: date
          example: "2024-09-08"
        bookingChannel:
          type: string
          example: "IPHONE"
        productGroupId:
          type: integer
          example: 2
        isPlatformFeeApplicable:
          type: string
          example: "YES"
        remarks:
          type: string
          example: "remarks"
        platformFeeThresholdLimit:
          type: number
          format: double
          example: 1.1
        lowerPlatformFee:
          type: number
          format: double
          example: 2.3
        higherPlatformFee:
          type: number
          format: double
          example: 5

    BadRequestErrorResponse:
      required:
        - traceId
        - error
        - path
        - timestamp
      type: object
      properties:
        traceId:
          type: string
          example: "abcxhjvbcsjacbhbcdswmsxcasdkjcb"
        error:
          $ref: '#/components/schemas/BadRequestError'
        path:
          type: string
          example: "/products"
        timestamp:
          type: string
          format: date-time
          example: "2024-09-08T14:32:45.123"

    BadRequestError:
      required:
        - code
        - message
        - data
      type: object
      properties:
        code:
          type: string
          example: "BadRequestError"
        message:
          type: string
          example: "Multiple errors in user request"
        data:
          $ref: '#/components/schemas/BadRequestErrorData'

    BadRequestErrorData:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/BadRequestFields'

    BadRequestFields:
      type: object
      properties:
        name:
          type: string
          example: "field"
        message:
          type: array
          items:
            type: string
